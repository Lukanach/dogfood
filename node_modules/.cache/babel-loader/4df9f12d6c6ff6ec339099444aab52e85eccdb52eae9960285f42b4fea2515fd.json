{"ast":null,"code":"class DogFoodApi {\n  constructor(_ref) {\n    let {\n      baseURL\n    } = _ref;\n    this.baseURL = baseURL;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getAuthorizationToken() {\n    return `Bearer ${this.token}`;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  checkToken(token) {\n    if (!token) throw new Error('Отсутствует токен');\n  }\n  async signIn(data) {\n    const res = await fetch(`${this.baseURL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    return res.json();\n  }\n  async signUp(data) {\n    const res = await fetch(`${this.baseURL}/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    return res.json();\n  }\n  async getAllProducts(search, token) {\n    this.checkToken(token);\n    const res = await fetch(`${this.baseURL}/products/search?query=${search}`, {\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n    if (res.status >= 400) {\n      throw new Error(`${res.status}:\n       Произошла ошибка при получении информации о товарах. Попробуйте сделать запрос позже.`);\n    }\n    return res.json();\n  }\n  async getProduct(id, token) {\n    const res = await fetch(`${this.baseURL}/products/${id}`, {\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n    if (res.status >= 400) {\n      throw new Error(`${res.status}\n      : Произошла ошибка при получении информации о товарe. \n      ${res.statusText}.`);\n    }\n    return res.json();\n  }\n  getProductsByIds(ids, token) {\n    return Promise.all(ids.map(id => fetch(`${this.baseURL}/products/${id}`, {\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json())));\n  }\n  async getUserByToken(token) {\n    const res = await fetch(`${this.baseURL}/v2/sm9/users/me`, {\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n    return res.json();\n  }\n  async addNewProduct(data, token) {\n    const res = await fetch(`${this.baseURL}/products`, {\n      method: 'POST',\n      headers: {\n        authorization: `Bearer ${token}`,\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (res.status >= 400) {\n      throw new Error(`${res.status}: Произошла ошибка при сохранении информации о товаре. \n      ${res.statusText}.`);\n    }\n    return res.json();\n  }\n  async editProduct(productId, data, token) {\n    const res = await fetch(`${this.baseURL}/products/${productId}`, {\n      method: 'PATCH',\n      headers: {\n        authorization: `Bearer ${token}`,\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (res.status >= 400) {\n      throw new Error(`${res.status}\n      : Произошла ошибка при сохранении информации о товаре.\n       ${res.statusText}.`);\n    }\n    return res.json();\n  }\n  async deleteProduct(productId, token) {\n    const res = await fetch(`${this.baseURL}/products/${productId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n    if (res.status >= 400) {\n      throw new Error(`${res.status}\n      : Произошла ошибка при удалении товара.\n       ${res.statusText}.`);\n    }\n    return res.json();\n  }\n  async getComments(productId, token) {\n    const res = await fetch(`${this.baseURL}/products/review/${productId}`, {\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n    if (res.status >= 400) {\n      throw new Error(`${res.status}\n      : Произошла ошибка при получении отзывов.\n       ${res.statusText}.`);\n    }\n    return res.json();\n  }\n  async addComment(productId, data, token) {\n    const res = await fetch(`${this.baseURL}/products/review/${productId}`, {\n      method: 'POST',\n      headers: {\n        authorization: `Bearer ${token}`,\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (res.status >= 400) {\n      throw new Error(`${res.status}\n      : Произошла ошибка при сохранении отзыва.\n       ${res.statusText}.`);\n    }\n    return res.json();\n  }\n  async deleteComment(productId, reviewId, token) {\n    const res = await fetch(`${this.baseURL}/products/review/${productId}/${reviewId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n    if (res.status >= 400) {\n      throw new Error(`${res.status}: Произошла ошибка при удалении отзыва. ${res.statusText}.`);\n    }\n    return res.json();\n  }\n}\nexport const dogFoodApi = new DogFoodApi({\n  baseURL: 'https://api.react-learning.ru'\n});","map":{"version":3,"names":["DogFoodApi","constructor","baseURL","getAuthorizationToken","token","checkToken","Error","signIn","data","res","fetch","method","headers","body","JSON","stringify","json","signUp","getAllProducts","search","authorization","status","getProduct","id","statusText","getProductsByIds","ids","Promise","all","map","then","getUserByToken","addNewProduct","editProduct","productId","deleteProduct","getComments","addComment","deleteComment","reviewId","dogFoodApi"],"sources":["/home/il/Документы/Sberuni/dogfood2/src/Api/DogFoodApi.js"],"sourcesContent":["class DogFoodApi {\n  constructor({ baseURL }) {\n    this.baseURL = baseURL\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getAuthorizationToken() {\n    return `Bearer ${this.token}`\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  checkToken(token) {\n    if (!token) throw new Error('Отсутствует токен')\n  }\n\n  async signIn(data) {\n    const res = await fetch(`${this.baseURL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n    return res.json()\n  }\n\n  async signUp(data) {\n    const res = await fetch(`${this.baseURL}/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n    return res.json()\n  }\n\n  async getAllProducts(search, token) {\n    this.checkToken(token)\n    const res = await fetch(`${this.baseURL}/products/search?query=${search}`, {\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    })\n\n    if (res.status >= 400) {\n      throw new Error(`${res.status}:\n       Произошла ошибка при получении информации о товарах. Попробуйте сделать запрос позже.`)\n    }\n\n    return res.json()\n  }\n\n  async getProduct(id, token) {\n    const res = await fetch(`${this.baseURL}/products/${id}`, {\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    })\n\n    if (res.status >= 400) {\n      throw new Error(`${res.status}\n      : Произошла ошибка при получении информации о товарe. \n      ${res.statusText}.`)\n    }\n\n    return res.json()\n  }\n\n  getProductsByIds(ids, token) {\n    return Promise.all(ids.map((id) => fetch(`${this.baseURL}/products/${id}`, {\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    }).then((res) => res.json())))\n  }\n\n  async getUserByToken(token) {\n    const res = await fetch(`${this.baseURL}/v2/sm9/users/me`, {\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    })\n    return res.json()\n  }\n\n  async addNewProduct(data, token) {\n    const res = await fetch(`${this.baseURL}/products`, {\n      method: 'POST',\n      headers: {\n        authorization: `Bearer ${token}`,\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n    if (res.status >= 400) {\n      throw new Error(`${res.status}: Произошла ошибка при сохранении информации о товаре. \n      ${res.statusText}.`)\n    }\n    return res.json()\n  }\n\n  async editProduct(productId, data, token) {\n    const res = await fetch(`${this.baseURL}/products/${productId}`, {\n      method: 'PATCH',\n      headers: {\n        authorization: `Bearer ${token}`,\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n    if (res.status >= 400) {\n      throw new Error(`${res.status}\n      : Произошла ошибка при сохранении информации о товаре.\n       ${res.statusText}.`)\n    }\n    return res.json()\n  }\n\n  async deleteProduct(productId, token) {\n    const res = await fetch(`${this.baseURL}/products/${productId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    })\n    if (res.status >= 400) {\n      throw new Error(`${res.status}\n      : Произошла ошибка при удалении товара.\n       ${res.statusText}.`)\n    }\n    return res.json()\n  }\n\n  async getComments(productId, token) {\n    const res = await fetch(`${this.baseURL}/products/review/${productId}`, {\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    })\n\n    if (res.status >= 400) {\n      throw new Error(`${res.status}\n      : Произошла ошибка при получении отзывов.\n       ${res.statusText}.`)\n    }\n\n    return res.json()\n  }\n\n  async addComment(productId, data, token) {\n    const res = await fetch(`${this.baseURL}/products/review/${productId}`, {\n      method: 'POST',\n      headers: {\n        authorization: `Bearer ${token}`,\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n    if (res.status >= 400) {\n      throw new Error(`${res.status}\n      : Произошла ошибка при сохранении отзыва.\n       ${res.statusText}.`)\n    }\n    return res.json()\n  }\n\n  async deleteComment(productId, reviewId, token) {\n    const res = await fetch(`${this.baseURL}/products/review/${productId}/${reviewId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    })\n    if (res.status >= 400) {\n      throw new Error(`${res.status}: Произошла ошибка при удалении отзыва. ${res.statusText}.`)\n    }\n    return res.json()\n  }\n}\nexport const dogFoodApi = new DogFoodApi({ baseURL: 'https://api.react-learning.ru' })\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}