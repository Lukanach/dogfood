{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { initState } from '../initState';\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: initState.user,\n  reducers: {\n    setNewUser: {\n      // eslint-disable-next-line consistent-return\n      reducer(state, action) {\n        if (state.email !== action.payload.email) return action.payload;\n      },\n      prepare(id, token, email, name, about, avatar) {\n        return {\n          payload: {\n            id,\n            token,\n            email,\n            name,\n            about,\n            avatar\n          }\n        };\n      }\n    },\n    logOut() {\n      return initState.user;\n    }\n  }\n});\nexport const {\n  setNewUser,\n  logOut\n} = userSlice.actions;\nexport const getUserSelector = state => state.user;\nexport const getTokenSelector = state => state.user.token;\nexport const userReducer = userSlice.reducer;","map":{"version":3,"names":["createSlice","initState","userSlice","name","initialState","user","reducers","setNewUser","reducer","state","action","email","payload","prepare","id","token","about","avatar","logOut","actions","getUserSelector","getTokenSelector","userReducer"],"sources":["/home/il/Документы/Sberuni/dogfood2/src/redux/slices/userSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport { initState } from '../initState'\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: initState.user,\n  reducers: {\n    setNewUser: {\n      // eslint-disable-next-line consistent-return\n      reducer(state, action) {\n        if (state.email !== action.payload.email) return action.payload\n      },\n      prepare(id, token, email, name, about, avatar) {\n        return {\n          payload: {\n            id,\n            token,\n            email,\n            name,\n            about,\n            avatar,\n          },\n\n        }\n      },\n    },\n    logOut() {\n      return initState.user\n    },\n  },\n})\nexport const { setNewUser, logOut } = userSlice.actions\nexport const getUserSelector = (state) => state.user\nexport const getTokenSelector = (state) => state.user.token\nexport const userReducer = userSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,cAAc;AAExC,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEH,SAAS,CAACI,IAAI;EAC5BC,QAAQ,EAAE;IACRC,UAAU,EAAE;MACV;MACAC,OAAO,CAACC,KAAK,EAAEC,MAAM,EAAE;QACrB,IAAID,KAAK,CAACE,KAAK,KAAKD,MAAM,CAACE,OAAO,CAACD,KAAK,EAAE,OAAOD,MAAM,CAACE,OAAO;MACjE,CAAC;MACDC,OAAO,CAACC,EAAE,EAAEC,KAAK,EAAEJ,KAAK,EAAER,IAAI,EAAEa,KAAK,EAAEC,MAAM,EAAE;QAC7C,OAAO;UACLL,OAAO,EAAE;YACPE,EAAE;YACFC,KAAK;YACLJ,KAAK;YACLR,IAAI;YACJa,KAAK;YACLC;UACF;QAEF,CAAC;MACH;IACF,CAAC;IACDC,MAAM,GAAG;MACP,OAAOjB,SAAS,CAACI,IAAI;IACvB;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAEE,UAAU;EAAEW;AAAO,CAAC,GAAGhB,SAAS,CAACiB,OAAO;AACvD,OAAO,MAAMC,eAAe,GAAIX,KAAK,IAAKA,KAAK,CAACJ,IAAI;AACpD,OAAO,MAAMgB,gBAAgB,GAAIZ,KAAK,IAAKA,KAAK,CAACJ,IAAI,CAACU,KAAK;AAC3D,OAAO,MAAMO,WAAW,GAAGpB,SAAS,CAACM,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}